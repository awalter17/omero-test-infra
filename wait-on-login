#!/bin/bash

OMERO_DIST=${OMERO_DIST:-/opt/omero/server/OMERO.server}
if [ ! -e $OMERO_DIST ];
then
    OMERO_DIST=/opt/omero/web/OMERO.web
fi

OMERO_HOST=${OMERO_HOST:-localhost}
OMERO_PORT=${OMERO_PORT:-4064}
OMERO_USER=${OMERO_USER:-root}
OMERO_PASS=${OMERO_PASS:-omero}
SLEEP_TIME=${SLEEP_TIME:-30}

export PATH=$PATH:${OMERO_DIST}/bin


max_attempts=10

function end {
    printf "travis_fold:end:wait-on-login\n"
}

trap end EXIT

printf "travis_fold:start:wait-on-login\n"


# First: wait until the OMERO port is listening
attempt_num=1
until python -c "import socket; assert socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect_ex(('$OMERO_HOST', $OMERO_PORT)) == 0"
do
    if (( attempt_num == max_attempts ))
    then
        echo "No ports open"
        exit 1
    fi

    echo "Port attempt $(( attempt_num++ )) failed. Trying again in $attempt_num seconds..."
    sleep $attempt_num

done

# HACK: This 'ready' detection is still not working. Adding a hard sleep to be safe.
echo Sleeping for ${SLEEP_TIME}
sleep ${SLEEP_TIME}

# Second: try to login
attempt_num=1
until omero login $OMERO_USER@$OMERO_HOST:$OMERO_PORT -w $OMERO_PASS 2>&1 >/dev/null
do
    if (( attempt_num == max_attempts ))
    then
        echo "All attempts failed"
        exit 1
    fi

    echo "Login attempt $(( attempt_num++ )) failed. Trying again in $attempt_num seconds..."
    sleep $attempt_num

done
